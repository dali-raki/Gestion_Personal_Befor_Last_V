@page "/equipe"
@using GestionPersonnel.Services.EquipeServices
@rendermode InteractiveServer
@using GestionPersonnel.Models.Equipe
@inject IEquipeService EquipeService

<div class="panel-employe">
    <div class="title">
        <h1>Equipe</h1>
    </div>
    <div class="option-employe">
        <div class="input-group w-25">
            <input type="text" class="form-control" placeholder="Search" @bind="searchTerm" @oninput="SearchTeams" />

            <button class="btn-p" type="button">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </div>

        <div class="btn-employe">
            <button class="btn-p" @onclick="Show_Popupd_UpdateEquipe">Mise à Jour Equipe</button>
            <button class="btn-p" @onclick="Show_Popupd_AddEquipe">Ajouter Equipe</button>
            <button class="btn-p" @onclick="Show_Popupd_AddPost">Ajouter Post</button>
        </div>
    </div>

    <div class="tab-employe">
        <table class="table">
            <thead>
                <tr>
                    <th>Nom Equipe</th>
                    <th>Chef Equipe</th>
                    <th>Number Post</th>
                </tr>
            </thead>
            <tbody>
                @if (filteredEquipesinfo != null && filteredEquipesinfo.Any())
                {
                    @foreach (var equipe in filteredEquipesinfo)
                    {
                        <tr>
                            <td class="a">@equipe.NomEquipe</td>
                            <td class="a">@equipe.ChefEquipeNom</td>
                            <td class="a">@equipe.NombreTotalDesPostes</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="5">No found Equipe</td></tr>
                }
            </tbody>
        </table>
    </div>
</div>

<NewequipeADDEquipe IsVisibleAddEquipe="@isVisibleAddEquipe" OnClose="Hide_Popupd_AddEquipe" />
<NewequipeUPDEquipe IsVisiblUpdateEquipe="@isVisibleUpdateEquipe" OnClose="Hide_Popupd_UpdateEquipe"></NewequipeUPDEquipe>
<NewequipeADDPost isVisibleAddPost="@isVisibleAddPost" OnClose="Hide_Popupd_AddPost" OnSave="@a"></NewequipeADDPost>

@code {
    private List<EquipesInfos> equipesinfo;
    private List<EquipesInfos> filteredEquipesinfo;
    private bool isVisibleAddEquipe = false;
    private bool isVisibleUpdateEquipe = false;
    private bool isVisibleAddPost = false;
    private string searchTerm = string.Empty;

    // Fetch Equipe data on page load
    protected override async Task OnInitializedAsync()
    {
        equipesinfo = await EquipeService.GetEquipePostesInfoAsync();
        filteredEquipesinfo = equipesinfo;
    }

    public async Task a()
    {
        equipesinfo = await EquipeService.GetEquipePostesInfoAsync();
        FilterTeams();
    }

    private void Show_Popupd_AddEquipe() => isVisibleAddEquipe = true;
    private void Hide_Popupd_AddEquipe() => isVisibleAddEquipe = false;

    private void Show_Popupd_UpdateEquipe() => isVisibleUpdateEquipe = true;
    private void Hide_Popupd_UpdateEquipe() => isVisibleUpdateEquipe = false;

    private void Show_Popupd_AddPost() => isVisibleAddPost = true;
    private void Hide_Popupd_AddPost() => isVisibleAddPost = false;


    private void SearchTeams(ChangeEventArgs changeEventArgs)
    {
        searchTerm = changeEventArgs.Value.ToString();

        FilterTeams();
    }

    private void FilterTeams()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredEquipesinfo = equipesinfo;
        }
        else
        {
            filteredEquipesinfo = equipesinfo
                .Where(e => e.NomEquipe.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                            e.ChefEquipeNom.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}