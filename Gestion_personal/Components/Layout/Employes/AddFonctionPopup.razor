@using GestionPersonnel.Models.Fonctions
@using GestionPersonnel.Services
@inject IFonctionService FonctionService

@code {
    [Parameter] public bool IsVisibleAddFunction { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }

    private string FonctionName;


    private void Hide_Popup_AddFunction()
    {
        FonctionName = string.Empty; 
        OnClose.InvokeAsync();
    }

    private async Task HandleSave()
    {
        var newFonction = new Fonction
            {
                NomFonction = FonctionName
            };

        try
        {
            await FonctionService.AddAsync(newFonction);
            await OnSave.InvokeAsync(newFonction);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error saving fonction: " + ex.Message);
        }

        Hide_Popup_AddFunction();
    }
}


@if (IsVisibleAddFunction)
{
    <div class="modal" tabindex="-1" style="display: block;">
        <div class="modal-dialog w-100">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ajouter Fonction</h5>
                </div>
                <div class="modal-body">
                    <form @onsubmit="HandleSave">
                        <div class="form-group">
                            <label for="FonctionName">Nom de la Fonction:</label>
                            <input id="FonctionName" type="text" @bind="FonctionName" class="form-control" required />
                        </div>


                        <div class="modal-footer">
                            <button type="button" class="btn-c" @onclick="Hide_Popup_AddFunction">Annuler</button>
                            <button type="submit" class="btn-p">Sauvegarder</button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
    </div>
}



    