@code {
    [Parameter] public string data { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    string keyframes;
    private async Task CloseToastAfterDelay()
    {
        await Task.Delay(1800); // Delay before hiding the toast
        await CloseToast();
    }

    private async Task CloseToast()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();
        }
    }

    protected override void OnParametersSet()
    {
        if (IsVisible)
        {
            _ = CloseToastAfterDelay();
        }
    }
}

@if (IsVisible)
{
    <div class="toast-container">
        <div class="toast-content" @onclick="CloseToast">
            <div class="toast-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="white" viewBox="0 0 24 24">
                    <path d="M9 16.172l-3.536-3.536-1.414 1.414 5 5 12-12-1.414-1.414z"/>
                </svg>
            </div>
            <div class="toast-text">
                <h2 class="toast-title">Success!@*@data*@</h2>
                <p class="toast-message">Votre opération s'est terminée avec succès.</p>
            </div>
        </div>
    </div>
}